---
import type { Props } from '@astrojs/starlight/props';
import CallToAction from '@astrojs/starlight/components/CallToAction.astro';
import { Code } from '@astrojs/starlight/components';
import { Content as Tagline } from './tagline.md';
---

<div class="hero lg:grid lg:grid-cols-hero lg:gap-5">
	<div class="hero-html">
		<div>
			<Code
				code={`
local k = import "k.libsonnet";

{
    grafana: k.apps.v1.deployment.new(
        name="grafana",
        replicas=1,
        containers=[k.core.v1.container.new(
            name="grafana",
            image="grafana/grafana",
        )]
    )
}`}
				lang="jsonnet"
				title="main.libsonnet"
			/>

			<div class="text-center lg:text-left">
				Kubernetes Deployment. That's all it takes.
			</div>
		</div>
	</div>
	<div class="flex stack">
		<div class="sl-flex copy">
			<h1 data-page-title>Define. Reuse. Override.</h1>
			<div class="tagline">
				<Tagline />
			</div>
		</div>

		<div class="sl-flex actions">
			<CallToAction
				link="./install/"
				variant="primary"
				icon={{ type: 'icon', name: 'right-arrow' }}
			>
				Get started
			</CallToAction>
			<CallToAction
				link="./tutorial/overview/"
				variant="minimal"
				icon={{ type: 'icon', name: 'laptop' }}
			>
				Read the tutorial
			</CallToAction>
		</div>
	</div>
</div>

<style>
	:global([data-has-hero]) {
		--sl-content-width: 66.7rem;
	}

	.hero {
		padding-bottom: 1rem;
	}

	.hero > img,
	.hero > .hero-html {
		object-fit: contain;
		height: auto;
		margin-inline: auto;
	}

	.stack {
		flex-direction: column;
		gap: clamp(1.5rem, calc(1.5rem + 1vw), 2rem);
		text-align: center;
	}

	.copy {
		flex-direction: column;
		gap: 1rem;
		align-items: center;
	}

	.copy > * {
		max-width: 50ch;
	}

	h1 {
		font-size: clamp(
			var(--sl-text-3xl),
			calc(0.25rem + 5vw),
			var(--sl-text-6xl)
		);
		line-height: var(--sl-line-height-headings);
		font-weight: 600;
		color: var(--sl-color-white);
	}

	.tagline {
		font-size: clamp(
			var(--sl-text-base),
			calc(0.0625rem + 2vw),
			var(--sl-text-xl)
		);
		color: var(--sl-color-gray-2);
	}

	.actions {
		gap: 1rem 2rem;
		flex-wrap: wrap;
		justify-content: center;
	}

	@media (min-width: 50rem) {
		.hero {
			padding-block: clamp(2.5rem, calc(1rem + 10vmin), 10rem);
		}

		.hero > img,
		.hero > .hero-html {
			order: 2;
			width: min(100%, 25rem);
		}

		.stack {
			text-align: start;
		}

		.copy {
			align-items: flex-start;
		}

		.actions {
			justify-content: flex-start;
		}
	}
</style>
